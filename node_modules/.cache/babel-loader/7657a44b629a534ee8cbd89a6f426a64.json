{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Sites/jiffy/src/Gif.js\";\nimport React, { Component } from 'react';\n\nclass Gif extends Component {\n  // when our video has loaded we add a load classname\n  // otherwise the video stays hidden\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false\n    };\n  }\n\n  render() {\n    const {\n      loaded\n    } = this.state;\n    const {\n      images\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"video\", {\n      // when we have the loaded state as true, we add a loaded class\n      className: `grid-item video  ${loaded && 'loaded'}`,\n      autoPlay: true,\n      loop: true,\n      src: images.original.mp4 // when the video loads we set the loaded state to be true\n      ,\n      onLoadedData: () => this.setState({\n        loaded: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default Gif;","map":{"version":3,"sources":["/Users/apple/Sites/jiffy/src/Gif.js"],"names":["React","Component","Gif","constructor","props","state","loaded","render","images","original","mp4","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAExB;AACA;AACAE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAGH;;AAGDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACD,MAAAA;AAAD,QAAW,KAAKD,KAAtB;AACA,UAAM;AAACG,MAAAA;AAAD,QAAW,KAAKJ,KAAtB;AACA,wBACI;AACA;AACF,MAAA,SAAS,EAAI,oBAAmBE,MAAM,IAAI,QAAS,EAFjD;AAGF,MAAA,QAAQ,MAHN;AAIF,MAAA,IAAI,MAJF;AAKF,MAAA,GAAG,EAAEE,MAAM,CAACC,QAAP,CAAgBC,GALnB,CAMF;AANE;AAOF,MAAA,YAAY,EAAE,MAAM,KAAKC,QAAL,CAAc;AAACL,QAAAA,MAAM,EAAE;AAAT,OAAd,CAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAWH;;AA1BuB;;AA6B5B,eAAeJ,GAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass Gif extends Component {\n\n    // when our video has loaded we add a load classname\n    // otherwise the video stays hidden\n    constructor(props) {\n        super(props)\n        this.state = {\n            loaded: false\n        }\n    }\n\n\n    render() {\n        const {loaded} = this.state;\n        const {images} = this.props;\n        return(\n            <video\n            // when we have the loaded state as true, we add a loaded class\n          className= {`grid-item video  ${loaded && 'loaded'}`}\n          autoPlay\n          loop\n          src={images.original.mp4}\n          // when the video loads we set the loaded state to be true\n          onLoadedData={() => this.setState({loaded: true}) }\n        />\n        )\n    }\n}\n\nexport default Gif;"]},"metadata":{},"sourceType":"module"}